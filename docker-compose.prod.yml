services:
  mysql:
    image: mysql
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    restart: on-failure

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: on-failure

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    restart: on-failure
    depends_on:
      - zookeeper

  discoveryservice:
    container_name: discoveryservice
    build:
      context: ./discoveryservice
      dockerfile: Dockerfile
    volumes:
      - /home/ahmed/devops/logs/discoveryservice:/app/logs
    ports:
      - "8761:8761"
    restart: on-failure

  requestservice:
    container_name: requestservice
    build:
      context: ./requestservice
      dockerfile: Dockerfile
    volumes:
      - /home/ahmed/devops/logs/requestservice:/app/logs
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    ports:
      - "9001:9001"
    restart: on-failure
    depends_on:
      - discoveryservice
      - gatewayservice

  handlerservice:
    container_name: handlerservice
    build:
      context: ./handlerservice
      dockerfile: Dockerfile
    volumes:
      - /home/ahmed/devops/logs/handlerservice:/app/logs
      - /home/ahmed/devops/files:/app/devops-files
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    ports:
      - "9002:9002"
    restart: on-failure
    depends_on:
      - discoveryservice
      - gatewayservice

  gatewayservice:
    container_name: gatewayservice
    build:
      context: ./gatewayservice
      dockerfile: Dockerfile
    volumes:
      - /home/ahmed/devops/logs/gatewayservice:/app/logs
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - mysql
      - discoveryservice

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-prod.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
volumes:
  db_data: